---
name: ALN File Merge

on:
  workflow_dispatch:  # Enables manual trigger

jobs:
  merge_and_run:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set Up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install Dependencies
        run: pip install pandas

      - name: Merge and Filter CSV Files
        run: |
          python -c "
          import os
          import pandas as pd
          from datetime import datetime
          import glob

          folder = './backend/schemas/source/data/ALNs_raw_downloads'
          timestamp = datetime.now().strftime('%Y%m%d-%H%M%S')
          output_file = f'./backend/schemas/source/data/cfda-lookup-{timestamp}.csv'

          print(f'Looking for CSV files in: {folder}')
          csv_files = glob.glob(f'{folder}/*.csv')
          print(f'CSV files found: {csv_files}')

          if not csv_files:
              print('No data found in the input files.')
              exit(1)

          all_data = []
          for file in csv_files:
              try:
                  df = pd.read_csv(file, encoding='utf-8')
              except UnicodeDecodeError:
                  print(f'Warning: Could not read {file} with UTF-8. Trying ISO-8859-1.')
                  df = pd.read_csv(file, encoding='ISO-8859-1')
              all_data.append(df)

          combined_data = pd.concat(all_data, ignore_index=True)

          # Filter rows with valid Program Number
          if 'Program Number' in combined_data.columns:
              combined_data['Program Number'] = combined_data['Program Number'].astype(str).str.strip()
              combined_data = combined_data[combined_data['Program Number'].str.contains(r'\\.', na=False)]
              print(f'Filtered valid rows. Remaining rows: {len(combined_data)}')
          else:
              print('No Program Number column found. Exiting.')
              exit(1)

          print(f'Saving merged file to: {output_file}')
          combined_data.to_csv(output_file, index=False, encoding='utf-8')
          "

      - name: Commit and Push Merged File
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add ./backend/schemas/source/data/cfda-lookup-*.csv
          git diff --cached --quiet || git commit -m "Add filtered and validated CSV file"
          git push

      - name: Run Make All
        run: make -C backend/schemas all
